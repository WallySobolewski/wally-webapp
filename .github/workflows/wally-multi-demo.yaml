# create pipeline with some name
name: wally multipjob project demo pipeline
# trigger section - when the pipeline should start
on:
  push:
    branches:
      - "dev"

#creating multiple jobs
jobs:
  wally-sast-job:
    runs-on: self-hosted
    steps:
      - name: checking docker version and sonarscanner
        run: |
          pwd
          whoami
          sonar-scanner --version
      - name: retrieve github code
        uses: actions/checkout@v4
      - name: local sonarqube scan
        run: |
          pwd
          sonar-scanner.bat -D"sonar.projectKey=wally-multi-demo" -D"sonar.sources=." -D"sonar.host.url=http://sonarqube.delvex.io:9000/" -D"sonar.token=sqp_0074b5aeed064dc7fc283433cc79068176f73167"

      # - name: SonarQube Scan
      #   uses: sonarsource/sonarqube-scan-action@v2.1.0 # Ex: v2.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
      #   with:
      #     projectBaseDir: .
      #     args: >
      #       -Dsonar.projectKey=wally-python-project
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
  # wally-build-job:
  #   runs-on: ubuntu-latest
  #   needs: wally-sast-job
  #   steps:
  #     - name: login from runner to docker hub account
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  #     - name: build and push to docker hub
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: . # location of Dockerfile
  #         push: true
  #         tags: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/wally-newapp:version01
  #     - name: docker logout from runner after pushing image
  #       run: docker logout